const fs = require('fs');

const content = fs.readFileSync('README.md', 'utf8');

// 擷取指定語言區塊
function extractParagraphs(lang) {
  const regex = new RegExp(`"""${lang}\\n([\\s\\S]*?)"""end`, 'm');
  const match = content.match(regex);
  if (!match) return [];

  // 用兩個換行分段（同時支援 \n 和 \r\n）
  return match[1]
    .trim()
    .split(/\r?\n\s*\r?\n/)
    .map(p => p.trim());
}

const enParagraphs = extractParagraphs('en');
const zhParagraphs = extractParagraphs('zh-tw');

let html = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Translation Compare</title>
  <style>
    body { font-family: sans-serif; padding: 20px; }
    table { width: 100%; border-collapse: collapse; }
    td, th { border: 1px solid #ccc; padding: 12px; vertical-align: top; }
    th { background-color: #f0f0f0; }
  </style>
</head>
<body>
<h1>Translation Comparison</h1>
<table>
<tr><th>English</th><th>Traditional Chinese</th></tr>
`;

const max = Math.max(enParagraphs.length, zhParagraphs.length);
for (let i = 0; i < max; i++) {
  html += `<tr><td>${enParagraphs[i] || ''}</td><td>${zhParagraphs[i] || ''}</td></tr>\n`;
}

html += '</table></body></html>';

fs.writeFileSync('index.html', html);
console.log('✅ index.html generated by paragraph.');